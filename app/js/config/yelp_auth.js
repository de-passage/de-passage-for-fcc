// Generated by CoffeeScript 1.9.3
(function() {
  var authenticate, cache, https, querystring,
    slice = [].slice;

  cache = require("memory-cache");

  https = require("https");

  querystring = require("querystring");

  authenticate = function() {
    var data, req;
    cache.put("test", "Stored");
    data = querystring.stringify({
      grant_type: "client_credentials",
      client_id: process.env.YELP_ID || (function() {
        throw "Error: yelp ID not provided";
      })(),
      client_secret: process.env.YELP_SECRET || (function() {
        throw "Error: yelp secret not provided";
      })()
    });
    req = https.request({
      method: "POST",
      host: "api.yelp.com",
      path: "/oauth2/token",
      port: process.env.PORT,
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
        "Content-Length": Buffer.byteLength(data)
      }
    }, function(res) {
      res.setEncoding("utf-8");
      res.on("data", function(chunk) {
        var ret;
        ret = JSON.parse(chunk);
        console.log("Fetched new yelp authentication token. Expires in " + ret.expires_in + " seconds");
        return cache.put("yelp_token", ret.access_token, Math.min(ret.expires_in * 1000, 2147483647), authenticate);
      });
      res.on("end", function() {
        return console.log("Yelp auth end");
      });
      return res.on("error", function() {
        var data;
        data = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        return console.log.apply(console, ["Error getting yelp authentication token:"].concat(slice.call(data)));
      });
    });
    req.write(data);
    return req.end();
  };

  module.exports = authenticate;

}).call(this);
