// Generated by CoffeeScript 1.9.3
(function() {
  var bcrypt, instanciateUser;

  bcrypt = require("bcrypt-nodejs");

  instanciateUser = function(db) {
    var User;
    return User = (function() {
      function User(name, email, votes, password1) {
        this.name = name;
        this.email = email;
        this.votes = votes;
        this.password = password1;
      }

      User.prototype.verifyPassword = function(password) {
        return bcrypt.compareSync(password, this.password);
      };

      User.prototype.setPassword = function(password) {
        return this.password = bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);
      };

      User.prototype.save = function(callback) {
        return db.save({
          _id: this.id,
          username: this.name,
          email: this.email,
          vote: this.votes,
          password: this.password
        }, (function(_this) {
          return function(err, obj) {
            if (err) {
              return callback(err);
            }
            _this.id = obj._id;
            return callback(null, _this);
          };
        })(this));
      };

      User.findOne = function(params, callback) {
        return db.findOne(params, function(err, result) {
          var user;
          if (err) {
            callback(err);
          }
          user = false;
          if (result != null) {
            user = new User(result.username, result.email, result.votes, result.password);
            user.id = result._id;
          }
          return callback(null, user);
        });
      };

      return User;

    })();
  };

  module.exports = instanciateUser;

}).call(this);
