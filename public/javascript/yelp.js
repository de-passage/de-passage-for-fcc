// Generated by CoffeeScript 1.9.3
(function() {
  var getCoordinates, searchVenues;

  getCoordinates = function() {
    var callLocAPI;
    callLocAPI = function() {
      return new Promise(function(resolve, reject) {
        return $.ajax("http://ip-api.com/json", {
          method: "GET",
          dataType: "json",
          success: resolve,
          error: reject
        });
      });
    };
    return new Promise(function(resolve, reject) {
      if (navigator.geolocation != null) {
        return navigator.geolocation.getCurrentPosition((function(pos) {
          return resolve({
            lon: pos.coords.longitude,
            lat: pos.coords.latitude
          });
        }), reject);
      } else {
        return reject();
      }
    })["catch"](callLocAPI);
  };

  searchVenues = function(coords, text) {
    return new Promise(function(resolve, reject) {
      var url;
      if ((coords.lon != null) && (coords.lat != null)) {
        url = window.searchURL + ("&longitude=" + (encodeURIComponent(coords.lon)) + "&latitude=" + (encodeURIComponent(coords.lat)));
        if (text != null) {
          url += "&term='" + (encodeURIComponent(text)) + "'";
        }
        return $.ajax(url, {
          method: "GET",
          dataType: "json",
          success: resolve,
          error: reject
        });
      } else {
        return reject();
      }
    });
  };

  $(function() {
    var d, i, len, ref, venueList;
    $("#venue-list").show();
    venueList = new Vue({
      el: "#app-container",
      data: {
        items: null,
        coords: null
      },
      methods: {
        toggle: function(e) {
          return e.shown = !e.shown;
        },
        autocomplete: function() {
          var txt;
          txt = $("#search-bar").val();
          if ((this.coords.lat != null) && (this.coords.lon != null)) {
            return $.ajax(window.autocompleteURL + ("?longitude=" + (encodeURIComponent(this.coords.lon)) + "&latitude=" + (encodeURIComponent(this.coords.lat)) + "&text='" + (encodeURIComponent(txt)) + "'"), {
              method: "GET",
              dataType: "json"
            }).done(function(args) {
              return console.log("response: ", JSON.stringify(args));
            }).fail(function() {
              return console.log("failed");
            });
          }
        },
        search: function(event) {
          var text;
          event.preventDefault();
          text = $("#search-bar").val();
          return searchVenues(this.coords, text).then(function(results) {
            var i, len, ref, result;
            ref = results.businesses;
            for (i = 0, len = ref.length; i < len; i++) {
              result = ref[i];
              result.shown = false;
            }
            return venueList.items = results.businesses;
          });
        }
      }
    });
    if (window.yelpData) {
      ref = window.yelpData.businesses;
      for (i = 0, len = ref.length; i < len; i++) {
        d = ref[i];
        d.shown = false;
      }
      venueList.items = window.yelpData.businesses;
    }
    return getCoordinates().then(function(coords) {
      venueList.coords = coords;
      if (!window.yelpData) {
        return searchVenues(coords).then(function(results) {
          var j, len1, ref1, result;
          ref1 = results.businesses;
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            result = ref1[j];
            result.shown = false;
          }
          return venueList.items = results.businesses;
        });
      }
    });
  });

}).call(this);
