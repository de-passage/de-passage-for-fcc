// Generated by CoffeeScript 1.9.3
(function() {
  var ajaxTo, alertError, getCoordinates, harmonizeResult, searchVenues;

  getCoordinates = function() {
    var callLocAPI;
    callLocAPI = function() {
      return new Promise(function(resolve, reject) {
        return $.ajax("http://ip-api.com/json", {
          method: "GET",
          dataType: "json",
          success: resolve,
          error: reject
        });
      });
    };
    return new Promise(function(resolve, reject) {
      if (navigator.geolocation != null) {
        return navigator.geolocation.getCurrentPosition((function(pos) {
          return resolve({
            lon: pos.coords.longitude,
            lat: pos.coords.latitude
          });
        }), reject);
      } else {
        return reject();
      }
    })["catch"](callLocAPI);
  };

  searchVenues = function(coords, text) {
    return new Promise(function(resolve, reject) {
      var url;
      if ((coords.lon != null) && (coords.lat != null)) {
        url = window.searchURL + ("&longitude=" + (encodeURIComponent(coords.lon)) + "&latitude=" + (encodeURIComponent(coords.lat)));
        if (text != null) {
          url += "&term='" + (encodeURIComponent(text)) + "'";
        }
        return $.ajax(url, {
          method: "GET",
          dataType: "json",
          success: resolve,
          error: reject
        });
      } else {
        return reject();
      }
    });
  };

  ajaxTo = function(url) {
    return new Promise(function(resolve, reject) {
      return $.ajax(url, {
        method: "POST",
        success: resolve,
        error: reject
      });
    });
  };

  alertError = (function(_this) {
    return function(data) {
      return alert("Error: " + data.responseJSON.error);
    };
  })(this);

  harmonizeResult = function(results) {
    var j, len, ref, result;
    ref = results.businesses;
    for (j = 0, len = ref.length; j < len; j++) {
      result = ref[j];
      if (result.user_going == null) {
        result.user_going = false;
      }
      result.shown = false;
    }
    return results.businesses;
  };

  $(function() {
    var venueList;
    $("#venue-list").show();
    venueList = new Vue({
      el: "#app-container",
      data: {
        loading: true,
        items: null,
        coords: null,
        update_url: window.updateUrl,
        destroy_url: window.destroyUrl
      },
      methods: {
        toggle: function(e) {
          return e.shown = !e.shown;
        },
        autocomplete: function() {
          var txt;
          txt = $("#search-bar").val();
          if ((this.coords.lat != null) && (this.coords.lon != null)) {
            return $.ajax(window.autocompleteURL + ("?longitude=" + (encodeURIComponent(this.coords.lon)) + "&latitude=" + (encodeURIComponent(this.coords.lat)) + "&text='" + (encodeURIComponent(txt)) + "'"), {
              method: "GET",
              dataType: "json"
            }).done(function(args) {
              return console.log("response: ", JSON.stringify(args));
            }).fail(function() {
              return console.log("failed");
            });
          }
        },
        search: function(event) {
          var text;
          event.preventDefault();
          text = $("#search-bar").val();
          venueList.loading = true;
          venueList.items = null;
          return searchVenues(this.coords, text).then(function(results) {
            venueList.items = harmonizeResult(results);
            return venueList.loading = false;
          });
        },
        toggleVisit: function(item) {
          var url;
          url = item.user_going ? venueList.destroy_url : venueList.update_url;
          url = url.replace(/ID/, item.id);
          return ajaxTo(url).then((function(_this) {
            return function(data) {
              var i, j, len, ref, results1;
              item.going = data.visits.length;
              item.user_going = !item.user_going;
              ref = venueList.items;
              results1 = [];
              for (j = 0, len = ref.length; j < len; j++) {
                i = ref[j];
                if (i.id !== item.id && i.user_going) {
                  i.user_going = false;
                  results1.push(i.going--);
                } else {
                  results1.push(void 0);
                }
              }
              return results1;
            };
          })(this))["catch"](alertError);
        }
      }
    });
    if (window.yelpData) {
      venueList.loading = false;
      venueList.items = harmonizeResult(window.yelpData);
    }
    getCoordinates().then(function(coords) {
      venueList.coords = coords;
      if (!window.yelpData) {
        return searchVenues(coords).then(function(results) {
          venueList.items = harmonizeResult(results);
          return venueList.loading = false;
        });
      }
    });
    return window.vue = venueList;
  });

}).call(this);
